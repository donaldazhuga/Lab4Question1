# ASP.NET Pipeline
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  name: 'AgentDonalda'  # Points to your self-hosted agent pool

steps:
# Step 1: Install .NET Core SDK
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    version: '8.x'  # Target .NET 8 SDK
    installationPath: 'C:\sdk'

# Step 2: Verify .NET SDK Installation
- script: |
    echo "Verifying .NET SDK installation..."
    dotnet --version
  displayName: 'Verify .NET SDK Installation'

# Debugging Step: List Working Directory Contents
- script: |
    echo "Debugging working directory..."
    dir $(Build.SourcesDirectory)
  displayName: 'Debug Working Directory'

# Step 3: Restore Dependencies
- task: DotNetCoreCLI@2
  displayName: 'Restore dependencies'
  inputs:
    command: 'restore'
    projects: '**/*.csproj'  # Matches all .csproj files in subdirectories

# Step 4: Build the Project
- task: DotNetCoreCLI@2
  displayName: 'Build project'
  inputs:
    command: 'build'
    projects: '**/*.csproj'  # Matches all .csproj files in subdirectories

# Step 5: Pack NuGet Package
- task: DotNetCoreCLI@2
  displayName: 'Pack NuGet package'
  inputs:
    command: 'pack'
    arguments: '--output $(Build.ArtifactStagingDirectory)'

# Debugging Step: Verify NuGet package exists
- script: |
    echo "Checking for NuGet package files..."
    dir $(Build.ArtifactStagingDirectory)
  displayName: 'Debugging: Check NuGet Package Files'

# Step 6: Push NuGet Package to Azure Artifacts Feed
- task: DotNetCoreCLI@2
  displayName: 'Push NuGet package to Azure Artifacts Feed'
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    arguments: '--source https://pkgs.dev.azure.com/dzhuga/StringExtensionLibrary/_packaging/newfeed/nuget/v3/index.json --api-key $(System.AccessToken) --skip-duplicate'

# Debugging Step: Verify NuGet Configuration
- script: |
    echo "Checking NuGet configuration..."
    dotnet nuget list source
  displayName: 'Debug NuGet Configuration'
